name: Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1)'
        required: true
        type: string

jobs:
  release:
    runs-on: macos-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Package for macOS
        run: npm run dist
      
      - name: Get version from package.json
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Check if release exists
        id: check-release
        run: |
          RELEASE_ID=$(gh api repos/${{ github.repository }}/releases/tags/v${{ steps.version.outputs.version }} --jq '.id' 2>/dev/null || echo "")
          if [ -n "$RELEASE_ID" ]; then
            echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT
            echo "release_exists=true" >> $GITHUB_OUTPUT
          else
            echo "release_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create new release
        if: steps.check-release.outputs.release_exists == 'false'
        run: |
          gh release create v${{ steps.version.outputs.version }} \
            --title "FlightAbove ${{ steps.version.outputs.version }}" \
            --notes "## FlightAbove ${{ steps.version.outputs.version }}
          
          ### ðŸ“¦ What's New
          - Bug fixes and improvements
          - Enhanced performance and stability
          
          ### ðŸ”§ Installation
          1. Download the appropriate DMG for your Mac:
             - Intel Mac (x64): \`FlightAbove-${{ steps.version.outputs.version }}.dmg\`
             - Apple Silicon: \`FlightAbove-${{ steps.version.outputs.version }}-arm64.dmg\`
          2. Open the DMG file
          3. Drag FlightAbove to your Applications folder
          4. Launch from Applications
          
          ### ðŸ“‹ System Requirements
          - macOS 10.14 or later
          - Internet connection
          - 100MB free disk space
          
          For complete documentation, see [README.md](https://github.com/${{ github.repository }}/blob/main/README.md)" \
            release/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update existing release
        if: steps.check-release.outputs.release_exists == 'true'
        run: |
          # Delete existing assets
          gh api repos/${{ github.repository }}/releases/${{ steps.check-release.outputs.release_id }}/assets | \
            jq -r '.[].id' | \
            xargs -I {} gh api repos/${{ github.repository }}/releases/assets/{} -X DELETE
          
          # Upload new assets
          gh release upload v${{ steps.version.outputs.version }} release/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create release comment
        if: steps.check-release.outputs.release_exists == 'true'
        run: |
          gh release edit v${{ steps.version.outputs.version }} \
            --notes "## FlightAbove ${{ steps.version.outputs.version }} (Updated)
          
          ### ðŸ“¦ What's New
          - Bug fixes and improvements
          - Enhanced performance and stability
          
          ### ðŸ”§ Installation
          1. Download the appropriate DMG for your Mac:
             - Intel Mac (x64): \`FlightAbove-${{ steps.version.outputs.version }}.dmg\`
             - Apple Silicon: \`FlightAbove-${{ steps.version.outputs.version }}-arm64.dmg\`
          2. Open the DMG file
          3. Drag FlightAbove to your Applications folder
          4. Launch from Applications
          
          ### ðŸ“‹ System Requirements
          - macOS 10.14 or later
          - Internet connection
          - 100MB free disk space
          
          For complete documentation, see [README.md](https://github.com/${{ github.repository }}/blob/main/README.md)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  manual-release:
    runs-on: macos-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Update version in package.json
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
      
      - name: Build application
        run: npm run build
      
      - name: Package for macOS
        run: npm run dist
      
      - name: Create release
        run: |
          gh release create v${{ github.event.inputs.version }} \
            --title "FlightAbove ${{ github.event.inputs.version }}" \
            --notes "## FlightAbove ${{ github.event.inputs.version }}
          
          ### ðŸ“¦ What's New
          - Bug fixes and improvements
          - Enhanced performance and stability
          
          ### ðŸ”§ Installation
          1. Download the appropriate DMG for your Mac:
             - Intel Mac (x64): \`FlightAbove-${{ github.event.inputs.version }}.dmg\`
             - Apple Silicon: \`FlightAbove-${{ github.event.inputs.version }}-arm64.dmg\`
          2. Open the DMG file
          3. Drag FlightAbove to your Applications folder
          4. Launch from Applications
          
          ### ðŸ“‹ System Requirements
          - macOS 10.14 or later
          - Internet connection
          - 100MB free disk space
          
          For complete documentation, see [README.md](https://github.com/${{ github.repository }}/blob/main/README.md)" \
            release/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Commit version update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "Bump version to ${{ github.event.inputs.version }}"
          git push 